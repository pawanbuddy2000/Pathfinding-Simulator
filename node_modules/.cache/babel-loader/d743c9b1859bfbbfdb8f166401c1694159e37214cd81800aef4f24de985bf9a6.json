{"ast":null,"code":"// Returns all nodes in the order in which they were visited.\n// Make nodes point back to their previous node so that we can compute the shortest path\n// by backtracking from the finish node.\nexport function bfs(grid,startNode,finishNode){var visitedNodesInOrder=[];var nextNodesStack=[startNode];while(nextNodesStack.length){var currentNode=nextNodesStack.shift();if(currentNode===finishNode)return visitedNodesInOrder;if(!currentNode.isWall&&(currentNode.isStart||!currentNode.isVisited)){currentNode.isVisited=true;visitedNodesInOrder.push(currentNode);var col=currentNode.col,row=currentNode.row;var nextNode=void 0;if(row>0){nextNode=grid[row-1][col];if(!nextNode.isVisited){nextNode.previousNode=currentNode;nextNodesStack.push(nextNode);}}if(row<grid.length-1){nextNode=grid[row+1][col];if(!nextNode.isVisited){nextNode.previousNode=currentNode;nextNodesStack.push(nextNode);}}if(col>0){nextNode=grid[row][col-1];if(!nextNode.isVisited){nextNode.previousNode=currentNode;nextNodesStack.push(nextNode);}}if(col<grid[0].length-1){nextNode=grid[row][col+1];if(!nextNode.isVisited){nextNode.previousNode=currentNode;nextNodesStack.push(nextNode);}}}}// return visitedNodesInOrder;\n}","map":{"version":3,"names":["bfs","grid","startNode","finishNode","visitedNodesInOrder","nextNodesStack","length","currentNode","shift","isWall","isStart","isVisited","push","col","row","nextNode","previousNode"],"sources":["/Users/buddy/Documents/GitHub/Pathfinding-Simulator/src/algorithms/bfs.js"],"sourcesContent":["// Returns all nodes in the order in which they were visited.\r\n// Make nodes point back to their previous node so that we can compute the shortest path\r\n// by backtracking from the finish node.\r\n\r\nexport function bfs(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  let nextNodesStack = [startNode];\r\n  while (nextNodesStack.length) {\r\n    const currentNode = nextNodesStack.shift();\r\n    if (currentNode === finishNode) return visitedNodesInOrder;\r\n\r\n    if (\r\n      !currentNode.isWall &&\r\n      (currentNode.isStart || !currentNode.isVisited)\r\n    ) {\r\n      currentNode.isVisited = true;\r\n      visitedNodesInOrder.push(currentNode);\r\n      const {col, row} = currentNode;\r\n      let nextNode;\r\n      if (row > 0) {\r\n        nextNode = grid[row - 1][col];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n      if (row < grid.length - 1) {\r\n        nextNode = grid[row + 1][col];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n      if (col > 0) {\r\n        nextNode = grid[row][col - 1];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n      if (col < grid[0].length - 1) {\r\n        nextNode = grid[row][col + 1];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // return visitedNodesInOrder;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AAEA,MAAO,SAASA,IAAG,CAACC,IAAI,CAAEC,SAAS,CAAEC,UAAU,CAAE,CAC/C,GAAMC,oBAAmB,CAAG,EAAE,CAC9B,GAAIC,eAAc,CAAG,CAACH,SAAS,CAAC,CAChC,MAAOG,cAAc,CAACC,MAAM,CAAE,CAC5B,GAAMC,YAAW,CAAGF,cAAc,CAACG,KAAK,EAAE,CAC1C,GAAID,WAAW,GAAKJ,UAAU,CAAE,MAAOC,oBAAmB,CAE1D,GACE,CAACG,WAAW,CAACE,MAAM,GAClBF,WAAW,CAACG,OAAO,EAAI,CAACH,WAAW,CAACI,SAAS,CAAC,CAC/C,CACAJ,WAAW,CAACI,SAAS,CAAG,IAAI,CAC5BP,mBAAmB,CAACQ,IAAI,CAACL,WAAW,CAAC,CACrC,GAAOM,IAAG,CAASN,WAAW,CAAvBM,GAAG,CAAEC,GAAG,CAAIP,WAAW,CAAlBO,GAAG,CACf,GAAIC,SAAQ,QACZ,GAAID,GAAG,CAAG,CAAC,CAAE,CACXC,QAAQ,CAAGd,IAAI,CAACa,GAAG,CAAG,CAAC,CAAC,CAACD,GAAG,CAAC,CAC7B,GAAI,CAACE,QAAQ,CAACJ,SAAS,CAAE,CACvBI,QAAQ,CAACC,YAAY,CAAGT,WAAW,CACnCF,cAAc,CAACO,IAAI,CAACG,QAAQ,CAAC,CAC/B,CACF,CACA,GAAID,GAAG,CAAGb,IAAI,CAACK,MAAM,CAAG,CAAC,CAAE,CACzBS,QAAQ,CAAGd,IAAI,CAACa,GAAG,CAAG,CAAC,CAAC,CAACD,GAAG,CAAC,CAC7B,GAAI,CAACE,QAAQ,CAACJ,SAAS,CAAE,CACvBI,QAAQ,CAACC,YAAY,CAAGT,WAAW,CACnCF,cAAc,CAACO,IAAI,CAACG,QAAQ,CAAC,CAC/B,CACF,CACA,GAAIF,GAAG,CAAG,CAAC,CAAE,CACXE,QAAQ,CAAGd,IAAI,CAACa,GAAG,CAAC,CAACD,GAAG,CAAG,CAAC,CAAC,CAC7B,GAAI,CAACE,QAAQ,CAACJ,SAAS,CAAE,CACvBI,QAAQ,CAACC,YAAY,CAAGT,WAAW,CACnCF,cAAc,CAACO,IAAI,CAACG,QAAQ,CAAC,CAC/B,CACF,CACA,GAAIF,GAAG,CAAGZ,IAAI,CAAC,CAAC,CAAC,CAACK,MAAM,CAAG,CAAC,CAAE,CAC5BS,QAAQ,CAAGd,IAAI,CAACa,GAAG,CAAC,CAACD,GAAG,CAAG,CAAC,CAAC,CAC7B,GAAI,CAACE,QAAQ,CAACJ,SAAS,CAAE,CACvBI,QAAQ,CAACC,YAAY,CAAGT,WAAW,CACnCF,cAAc,CAACO,IAAI,CAACG,QAAQ,CAAC,CAC/B,CACF,CACF,CACF,CACA;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}